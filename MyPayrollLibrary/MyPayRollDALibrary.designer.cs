#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyPayrollLibrary
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="MyPayRoll")]
	public partial class MyPayRollDALibraryDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAppointment(Appointment instance);
    partial void UpdateAppointment(Appointment instance);
    partial void DeleteAppointment(Appointment instance);
    partial void InsertBusinessUnit(BusinessUnit instance);
    partial void UpdateBusinessUnit(BusinessUnit instance);
    partial void DeleteBusinessUnit(BusinessUnit instance);
    partial void InsertDeduction(Deduction instance);
    partial void UpdateDeduction(Deduction instance);
    partial void DeleteDeduction(Deduction instance);
    partial void InsertEarning(Earning instance);
    partial void UpdateEarning(Earning instance);
    partial void DeleteEarning(Earning instance);
    partial void InsertEeDedResult(EeDedResult instance);
    partial void UpdateEeDedResult(EeDedResult instance);
    partial void DeleteEeDedResult(EeDedResult instance);
    partial void InsertEeDeduction(EeDeduction instance);
    partial void UpdateEeDeduction(EeDeduction instance);
    partial void DeleteEeDeduction(EeDeduction instance);
    partial void InsertEeEarning(EeEarning instance);
    partial void UpdateEeEarning(EeEarning instance);
    partial void DeleteEeEarning(EeEarning instance);
    partial void InsertEeEarnResult(EeEarnResult instance);
    partial void UpdateEeEarnResult(EeEarnResult instance);
    partial void DeleteEeEarnResult(EeEarnResult instance);
    partial void InsertEeTaxResult(EeTaxResult instance);
    partial void UpdateEeTaxResult(EeTaxResult instance);
    partial void DeleteEeTaxResult(EeTaxResult instance);
    partial void InsertEmployeeInfo(EmployeeInfo instance);
    partial void UpdateEmployeeInfo(EmployeeInfo instance);
    partial void DeleteEmployeeInfo(EmployeeInfo instance);
    partial void InsertEmployer(Employer instance);
    partial void UpdateEmployer(Employer instance);
    partial void DeleteEmployer(Employer instance);
    partial void InsertEmployment(Employment instance);
    partial void UpdateEmployment(Employment instance);
    partial void DeleteEmployment(Employment instance);
    partial void InsertJob(Job instance);
    partial void UpdateJob(Job instance);
    partial void DeleteJob(Job instance);
    partial void InsertPayCalendar(PayCalendar instance);
    partial void UpdatePayCalendar(PayCalendar instance);
    partial void DeletePayCalendar(PayCalendar instance);
    partial void InsertPosition(Position instance);
    partial void UpdatePosition(Position instance);
    partial void DeletePosition(Position instance);
    #endregion
		
		public MyPayRollDALibraryDataContext() : 
				base(global::MyPayrollLibrary.Properties.Settings.Default.MyPayRollConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public MyPayRollDALibraryDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MyPayRollDALibraryDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MyPayRollDALibraryDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MyPayRollDALibraryDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Appointment> Appointments
		{
			get
			{
				return this.GetTable<Appointment>();
			}
		}
		
		public System.Data.Linq.Table<BusinessUnit> BusinessUnits
		{
			get
			{
				return this.GetTable<BusinessUnit>();
			}
		}
		
		public System.Data.Linq.Table<Deduction> Deductions
		{
			get
			{
				return this.GetTable<Deduction>();
			}
		}
		
		public System.Data.Linq.Table<Earning> Earnings
		{
			get
			{
				return this.GetTable<Earning>();
			}
		}
		
		public System.Data.Linq.Table<EeDedResult> EeDedResults
		{
			get
			{
				return this.GetTable<EeDedResult>();
			}
		}
		
		public System.Data.Linq.Table<EeDeduction> EeDeductions
		{
			get
			{
				return this.GetTable<EeDeduction>();
			}
		}
		
		public System.Data.Linq.Table<EeEarning> EeEarnings
		{
			get
			{
				return this.GetTable<EeEarning>();
			}
		}
		
		public System.Data.Linq.Table<EeEarnResult> EeEarnResults
		{
			get
			{
				return this.GetTable<EeEarnResult>();
			}
		}
		
		public System.Data.Linq.Table<EeTaxResult> EeTaxResults
		{
			get
			{
				return this.GetTable<EeTaxResult>();
			}
		}
		
		public System.Data.Linq.Table<EmployeeInfo> EmployeeInfos
		{
			get
			{
				return this.GetTable<EmployeeInfo>();
			}
		}
		
		public System.Data.Linq.Table<Employer> Employers
		{
			get
			{
				return this.GetTable<Employer>();
			}
		}
		
		public System.Data.Linq.Table<Employment> Employments
		{
			get
			{
				return this.GetTable<Employment>();
			}
		}
		
		public System.Data.Linq.Table<Job> Jobs
		{
			get
			{
				return this.GetTable<Job>();
			}
		}
		
		public System.Data.Linq.Table<PayCalendar> PayCalendars
		{
			get
			{
				return this.GetTable<PayCalendar>();
			}
		}
		
		public System.Data.Linq.Table<Position> Positions
		{
			get
			{
				return this.GetTable<Position>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Appointment")]
	public partial class Appointment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _EmployeeCode;
		
		private int _ApptNo;
		
		private System.DateTime _apptStartDate;
		
		private System.Nullable<System.DateTime> _ApptEndDate;
		
		private string _BuCode;
		
		private string _JobCode;
		
		private string _PosnId;
		
		private string _ReportsTo;
		
		private EntityRef<EmployeeInfo> _EmployeeInfo;
		
		private EntityRef<Position> _Position;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmployeeCodeChanging(string value);
    partial void OnEmployeeCodeChanged();
    partial void OnApptNoChanging(int value);
    partial void OnApptNoChanged();
    partial void OnapptStartDateChanging(System.DateTime value);
    partial void OnapptStartDateChanged();
    partial void OnApptEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnApptEndDateChanged();
    partial void OnBuCodeChanging(string value);
    partial void OnBuCodeChanged();
    partial void OnJobCodeChanging(string value);
    partial void OnJobCodeChanged();
    partial void OnPosnIdChanging(string value);
    partial void OnPosnIdChanged();
    partial void OnReportsToChanging(string value);
    partial void OnReportsToChanged();
    #endregion
		
		public Appointment()
		{
			this._EmployeeInfo = default(EntityRef<EmployeeInfo>);
			this._Position = default(EntityRef<Position>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeCode", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string EmployeeCode
		{
			get
			{
				return this._EmployeeCode;
			}
			set
			{
				if ((this._EmployeeCode != value))
				{
					if (this._EmployeeInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._EmployeeCode = value;
					this.SendPropertyChanged("EmployeeCode");
					this.OnEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApptNo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ApptNo
		{
			get
			{
				return this._ApptNo;
			}
			set
			{
				if ((this._ApptNo != value))
				{
					this.OnApptNoChanging(value);
					this.SendPropertyChanging();
					this._ApptNo = value;
					this.SendPropertyChanged("ApptNo");
					this.OnApptNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_apptStartDate", DbType="DateTime NOT NULL")]
		public System.DateTime apptStartDate
		{
			get
			{
				return this._apptStartDate;
			}
			set
			{
				if ((this._apptStartDate != value))
				{
					this.OnapptStartDateChanging(value);
					this.SendPropertyChanging();
					this._apptStartDate = value;
					this.SendPropertyChanged("apptStartDate");
					this.OnapptStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApptEndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ApptEndDate
		{
			get
			{
				return this._ApptEndDate;
			}
			set
			{
				if ((this._ApptEndDate != value))
				{
					this.OnApptEndDateChanging(value);
					this.SendPropertyChanging();
					this._ApptEndDate = value;
					this.SendPropertyChanged("ApptEndDate");
					this.OnApptEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuCode", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string BuCode
		{
			get
			{
				return this._BuCode;
			}
			set
			{
				if ((this._BuCode != value))
				{
					if (this._Position.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBuCodeChanging(value);
					this.SendPropertyChanging();
					this._BuCode = value;
					this.SendPropertyChanged("BuCode");
					this.OnBuCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobCode", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string JobCode
		{
			get
			{
				return this._JobCode;
			}
			set
			{
				if ((this._JobCode != value))
				{
					if (this._Position.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJobCodeChanging(value);
					this.SendPropertyChanging();
					this._JobCode = value;
					this.SendPropertyChanged("JobCode");
					this.OnJobCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PosnId", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string PosnId
		{
			get
			{
				return this._PosnId;
			}
			set
			{
				if ((this._PosnId != value))
				{
					if (this._Position.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPosnIdChanging(value);
					this.SendPropertyChanging();
					this._PosnId = value;
					this.SendPropertyChanged("PosnId");
					this.OnPosnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportsTo", DbType="VarChar(10)")]
		public string ReportsTo
		{
			get
			{
				return this._ReportsTo;
			}
			set
			{
				if ((this._ReportsTo != value))
				{
					this.OnReportsToChanging(value);
					this.SendPropertyChanging();
					this._ReportsTo = value;
					this.SendPropertyChanged("ReportsTo");
					this.OnReportsToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EmployeeInfo_Appointment", Storage="_EmployeeInfo", ThisKey="EmployeeCode", OtherKey="EmployeeCode", IsForeignKey=true)]
		public EmployeeInfo EmployeeInfo
		{
			get
			{
				return this._EmployeeInfo.Entity;
			}
			set
			{
				EmployeeInfo previousValue = this._EmployeeInfo.Entity;
				if (((previousValue != value) 
							|| (this._EmployeeInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EmployeeInfo.Entity = null;
						previousValue.Appointments.Remove(this);
					}
					this._EmployeeInfo.Entity = value;
					if ((value != null))
					{
						value.Appointments.Add(this);
						this._EmployeeCode = value.EmployeeCode;
					}
					else
					{
						this._EmployeeCode = default(string);
					}
					this.SendPropertyChanged("EmployeeInfo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Position_Appointment", Storage="_Position", ThisKey="BuCode,JobCode,PosnId", OtherKey="BuCode,JobCode,PosnId", IsForeignKey=true)]
		public Position Position
		{
			get
			{
				return this._Position.Entity;
			}
			set
			{
				Position previousValue = this._Position.Entity;
				if (((previousValue != value) 
							|| (this._Position.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Position.Entity = null;
						previousValue.Appointments.Remove(this);
					}
					this._Position.Entity = value;
					if ((value != null))
					{
						value.Appointments.Add(this);
						this._BuCode = value.BuCode;
						this._JobCode = value.JobCode;
						this._PosnId = value.PosnId;
					}
					else
					{
						this._BuCode = default(string);
						this._JobCode = default(string);
						this._PosnId = default(string);
					}
					this.SendPropertyChanged("Position");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BusinessUnit")]
	public partial class BusinessUnit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _BuCode;
		
		private string _BuName;
		
		private System.DateTime _BuEffectiveFrom;
		
		private System.Nullable<System.DateTime> _BuEffectiveTo;
		
		private string _BuType;
		
		private string _BuParent;
		
		private EntitySet<Position> _Positions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBuCodeChanging(string value);
    partial void OnBuCodeChanged();
    partial void OnBuNameChanging(string value);
    partial void OnBuNameChanged();
    partial void OnBuEffectiveFromChanging(System.DateTime value);
    partial void OnBuEffectiveFromChanged();
    partial void OnBuEffectiveToChanging(System.Nullable<System.DateTime> value);
    partial void OnBuEffectiveToChanged();
    partial void OnBuTypeChanging(string value);
    partial void OnBuTypeChanged();
    partial void OnBuParentChanging(string value);
    partial void OnBuParentChanged();
    #endregion
		
		public BusinessUnit()
		{
			this._Positions = new EntitySet<Position>(new Action<Position>(this.attach_Positions), new Action<Position>(this.detach_Positions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuCode", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string BuCode
		{
			get
			{
				return this._BuCode;
			}
			set
			{
				if ((this._BuCode != value))
				{
					this.OnBuCodeChanging(value);
					this.SendPropertyChanging();
					this._BuCode = value;
					this.SendPropertyChanged("BuCode");
					this.OnBuCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuName", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string BuName
		{
			get
			{
				return this._BuName;
			}
			set
			{
				if ((this._BuName != value))
				{
					this.OnBuNameChanging(value);
					this.SendPropertyChanging();
					this._BuName = value;
					this.SendPropertyChanged("BuName");
					this.OnBuNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuEffectiveFrom", DbType="DateTime NOT NULL")]
		public System.DateTime BuEffectiveFrom
		{
			get
			{
				return this._BuEffectiveFrom;
			}
			set
			{
				if ((this._BuEffectiveFrom != value))
				{
					this.OnBuEffectiveFromChanging(value);
					this.SendPropertyChanging();
					this._BuEffectiveFrom = value;
					this.SendPropertyChanged("BuEffectiveFrom");
					this.OnBuEffectiveFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuEffectiveTo", DbType="DateTime")]
		public System.Nullable<System.DateTime> BuEffectiveTo
		{
			get
			{
				return this._BuEffectiveTo;
			}
			set
			{
				if ((this._BuEffectiveTo != value))
				{
					this.OnBuEffectiveToChanging(value);
					this.SendPropertyChanging();
					this._BuEffectiveTo = value;
					this.SendPropertyChanged("BuEffectiveTo");
					this.OnBuEffectiveToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuType", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string BuType
		{
			get
			{
				return this._BuType;
			}
			set
			{
				if ((this._BuType != value))
				{
					this.OnBuTypeChanging(value);
					this.SendPropertyChanging();
					this._BuType = value;
					this.SendPropertyChanged("BuType");
					this.OnBuTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuParent", DbType="VarChar(10)")]
		public string BuParent
		{
			get
			{
				return this._BuParent;
			}
			set
			{
				if ((this._BuParent != value))
				{
					this.OnBuParentChanging(value);
					this.SendPropertyChanging();
					this._BuParent = value;
					this.SendPropertyChanged("BuParent");
					this.OnBuParentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BusinessUnit_Position", Storage="_Positions", ThisKey="BuCode", OtherKey="BuCode")]
		public EntitySet<Position> Positions
		{
			get
			{
				return this._Positions;
			}
			set
			{
				this._Positions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Positions(Position entity)
		{
			this.SendPropertyChanging();
			entity.BusinessUnit = this;
		}
		
		private void detach_Positions(Position entity)
		{
			this.SendPropertyChanging();
			entity.BusinessUnit = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Deduction")]
	public partial class Deduction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _DedCode;
		
		private string _DedDesc;
		
		private System.DateTime _DedStartDate;
		
		private System.Nullable<System.DateTime> _DedEndDate;
		
		private string _EeErCode;
		
		private string _DedTaxability;
		
		private decimal _DedDfltAmt;
		
		private EntitySet<EeDeduction> _EeDeductions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDedCodeChanging(string value);
    partial void OnDedCodeChanged();
    partial void OnDedDescChanging(string value);
    partial void OnDedDescChanged();
    partial void OnDedStartDateChanging(System.DateTime value);
    partial void OnDedStartDateChanged();
    partial void OnDedEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDedEndDateChanged();
    partial void OnEeErCodeChanging(string value);
    partial void OnEeErCodeChanged();
    partial void OnDedTaxabilityChanging(string value);
    partial void OnDedTaxabilityChanged();
    partial void OnDedDfltAmtChanging(decimal value);
    partial void OnDedDfltAmtChanged();
    #endregion
		
		public Deduction()
		{
			this._EeDeductions = new EntitySet<EeDeduction>(new Action<EeDeduction>(this.attach_EeDeductions), new Action<EeDeduction>(this.detach_EeDeductions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DedCode", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string DedCode
		{
			get
			{
				return this._DedCode;
			}
			set
			{
				if ((this._DedCode != value))
				{
					this.OnDedCodeChanging(value);
					this.SendPropertyChanging();
					this._DedCode = value;
					this.SendPropertyChanged("DedCode");
					this.OnDedCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DedDesc", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string DedDesc
		{
			get
			{
				return this._DedDesc;
			}
			set
			{
				if ((this._DedDesc != value))
				{
					this.OnDedDescChanging(value);
					this.SendPropertyChanging();
					this._DedDesc = value;
					this.SendPropertyChanged("DedDesc");
					this.OnDedDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DedStartDate", DbType="DateTime NOT NULL")]
		public System.DateTime DedStartDate
		{
			get
			{
				return this._DedStartDate;
			}
			set
			{
				if ((this._DedStartDate != value))
				{
					this.OnDedStartDateChanging(value);
					this.SendPropertyChanging();
					this._DedStartDate = value;
					this.SendPropertyChanged("DedStartDate");
					this.OnDedStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DedEndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DedEndDate
		{
			get
			{
				return this._DedEndDate;
			}
			set
			{
				if ((this._DedEndDate != value))
				{
					this.OnDedEndDateChanging(value);
					this.SendPropertyChanging();
					this._DedEndDate = value;
					this.SendPropertyChanged("DedEndDate");
					this.OnDedEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EeErCode", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		public string EeErCode
		{
			get
			{
				return this._EeErCode;
			}
			set
			{
				if ((this._EeErCode != value))
				{
					this.OnEeErCodeChanging(value);
					this.SendPropertyChanging();
					this._EeErCode = value;
					this.SendPropertyChanged("EeErCode");
					this.OnEeErCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DedTaxability", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string DedTaxability
		{
			get
			{
				return this._DedTaxability;
			}
			set
			{
				if ((this._DedTaxability != value))
				{
					this.OnDedTaxabilityChanging(value);
					this.SendPropertyChanging();
					this._DedTaxability = value;
					this.SendPropertyChanged("DedTaxability");
					this.OnDedTaxabilityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DedDfltAmt", DbType="Decimal(8,3) NOT NULL")]
		public decimal DedDfltAmt
		{
			get
			{
				return this._DedDfltAmt;
			}
			set
			{
				if ((this._DedDfltAmt != value))
				{
					this.OnDedDfltAmtChanging(value);
					this.SendPropertyChanging();
					this._DedDfltAmt = value;
					this.SendPropertyChanged("DedDfltAmt");
					this.OnDedDfltAmtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Deduction_EeDeduction", Storage="_EeDeductions", ThisKey="DedCode", OtherKey="DedCode")]
		public EntitySet<EeDeduction> EeDeductions
		{
			get
			{
				return this._EeDeductions;
			}
			set
			{
				this._EeDeductions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EeDeductions(EeDeduction entity)
		{
			this.SendPropertyChanging();
			entity.Deduction = this;
		}
		
		private void detach_EeDeductions(EeDeduction entity)
		{
			this.SendPropertyChanging();
			entity.Deduction = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Earning")]
	public partial class Earning : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _EarnCode;
		
		private string _EarnDesc;
		
		private System.DateTime _EarnStartDate;
		
		private System.Nullable<System.DateTime> _EarnEndDate;
		
		private string _EarnTaxability;
		
		private decimal _EarnDfltAmt;
		
		private EntitySet<EeEarning> _EeEarnings;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEarnCodeChanging(string value);
    partial void OnEarnCodeChanged();
    partial void OnEarnDescChanging(string value);
    partial void OnEarnDescChanged();
    partial void OnEarnStartDateChanging(System.DateTime value);
    partial void OnEarnStartDateChanged();
    partial void OnEarnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEarnEndDateChanged();
    partial void OnEarnTaxabilityChanging(string value);
    partial void OnEarnTaxabilityChanged();
    partial void OnEarnDfltAmtChanging(decimal value);
    partial void OnEarnDfltAmtChanged();
    #endregion
		
		public Earning()
		{
			this._EeEarnings = new EntitySet<EeEarning>(new Action<EeEarning>(this.attach_EeEarnings), new Action<EeEarning>(this.detach_EeEarnings));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EarnCode", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string EarnCode
		{
			get
			{
				return this._EarnCode;
			}
			set
			{
				if ((this._EarnCode != value))
				{
					this.OnEarnCodeChanging(value);
					this.SendPropertyChanging();
					this._EarnCode = value;
					this.SendPropertyChanged("EarnCode");
					this.OnEarnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EarnDesc", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string EarnDesc
		{
			get
			{
				return this._EarnDesc;
			}
			set
			{
				if ((this._EarnDesc != value))
				{
					this.OnEarnDescChanging(value);
					this.SendPropertyChanging();
					this._EarnDesc = value;
					this.SendPropertyChanged("EarnDesc");
					this.OnEarnDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EarnStartDate", DbType="DateTime NOT NULL")]
		public System.DateTime EarnStartDate
		{
			get
			{
				return this._EarnStartDate;
			}
			set
			{
				if ((this._EarnStartDate != value))
				{
					this.OnEarnStartDateChanging(value);
					this.SendPropertyChanging();
					this._EarnStartDate = value;
					this.SendPropertyChanged("EarnStartDate");
					this.OnEarnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EarnEndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EarnEndDate
		{
			get
			{
				return this._EarnEndDate;
			}
			set
			{
				if ((this._EarnEndDate != value))
				{
					this.OnEarnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EarnEndDate = value;
					this.SendPropertyChanged("EarnEndDate");
					this.OnEarnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EarnTaxability", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string EarnTaxability
		{
			get
			{
				return this._EarnTaxability;
			}
			set
			{
				if ((this._EarnTaxability != value))
				{
					this.OnEarnTaxabilityChanging(value);
					this.SendPropertyChanging();
					this._EarnTaxability = value;
					this.SendPropertyChanged("EarnTaxability");
					this.OnEarnTaxabilityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EarnDfltAmt", DbType="Decimal(8,3) NOT NULL")]
		public decimal EarnDfltAmt
		{
			get
			{
				return this._EarnDfltAmt;
			}
			set
			{
				if ((this._EarnDfltAmt != value))
				{
					this.OnEarnDfltAmtChanging(value);
					this.SendPropertyChanging();
					this._EarnDfltAmt = value;
					this.SendPropertyChanged("EarnDfltAmt");
					this.OnEarnDfltAmtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Earning_EeEarning", Storage="_EeEarnings", ThisKey="EarnCode", OtherKey="EarnCode")]
		public EntitySet<EeEarning> EeEarnings
		{
			get
			{
				return this._EeEarnings;
			}
			set
			{
				this._EeEarnings.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EeEarnings(EeEarning entity)
		{
			this.SendPropertyChanging();
			entity.Earning = this;
		}
		
		private void detach_EeEarnings(EeEarning entity)
		{
			this.SendPropertyChanging();
			entity.Earning = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EeDedResult")]
	public partial class EeDedResult : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _EmployeeCode;
		
		private string _PayFrequency;
		
		private string _TaxYear;
		
		private int _PayPeriodNo;
		
		private string _DedCode;
		
		private decimal _EeDedAmt;
		
		private string _DedTaxability;
		
		private EntityRef<EeDeduction> _EeDeduction;
		
		private EntityRef<PayCalendar> _PayCalendar;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmployeeCodeChanging(string value);
    partial void OnEmployeeCodeChanged();
    partial void OnPayFrequencyChanging(string value);
    partial void OnPayFrequencyChanged();
    partial void OnTaxYearChanging(string value);
    partial void OnTaxYearChanged();
    partial void OnPayPeriodNoChanging(int value);
    partial void OnPayPeriodNoChanged();
    partial void OnDedCodeChanging(string value);
    partial void OnDedCodeChanged();
    partial void OnEeDedAmtChanging(decimal value);
    partial void OnEeDedAmtChanged();
    partial void OnDedTaxabilityChanging(string value);
    partial void OnDedTaxabilityChanged();
    #endregion
		
		public EeDedResult()
		{
			this._EeDeduction = default(EntityRef<EeDeduction>);
			this._PayCalendar = default(EntityRef<PayCalendar>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeCode", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string EmployeeCode
		{
			get
			{
				return this._EmployeeCode;
			}
			set
			{
				if ((this._EmployeeCode != value))
				{
					if (this._EeDeduction.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._EmployeeCode = value;
					this.SendPropertyChanged("EmployeeCode");
					this.OnEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayFrequency", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PayFrequency
		{
			get
			{
				return this._PayFrequency;
			}
			set
			{
				if ((this._PayFrequency != value))
				{
					if (this._PayCalendar.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPayFrequencyChanging(value);
					this.SendPropertyChanging();
					this._PayFrequency = value;
					this.SendPropertyChanged("PayFrequency");
					this.OnPayFrequencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxYear", DbType="VarChar(4) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TaxYear
		{
			get
			{
				return this._TaxYear;
			}
			set
			{
				if ((this._TaxYear != value))
				{
					if (this._PayCalendar.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTaxYearChanging(value);
					this.SendPropertyChanging();
					this._TaxYear = value;
					this.SendPropertyChanged("TaxYear");
					this.OnTaxYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayPeriodNo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PayPeriodNo
		{
			get
			{
				return this._PayPeriodNo;
			}
			set
			{
				if ((this._PayPeriodNo != value))
				{
					if (this._PayCalendar.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPayPeriodNoChanging(value);
					this.SendPropertyChanging();
					this._PayPeriodNo = value;
					this.SendPropertyChanged("PayPeriodNo");
					this.OnPayPeriodNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DedCode", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string DedCode
		{
			get
			{
				return this._DedCode;
			}
			set
			{
				if ((this._DedCode != value))
				{
					if (this._EeDeduction.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDedCodeChanging(value);
					this.SendPropertyChanging();
					this._DedCode = value;
					this.SendPropertyChanged("DedCode");
					this.OnDedCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EeDedAmt", DbType="Decimal(13,2) NOT NULL")]
		public decimal EeDedAmt
		{
			get
			{
				return this._EeDedAmt;
			}
			set
			{
				if ((this._EeDedAmt != value))
				{
					this.OnEeDedAmtChanging(value);
					this.SendPropertyChanging();
					this._EeDedAmt = value;
					this.SendPropertyChanged("EeDedAmt");
					this.OnEeDedAmtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DedTaxability", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string DedTaxability
		{
			get
			{
				return this._DedTaxability;
			}
			set
			{
				if ((this._DedTaxability != value))
				{
					this.OnDedTaxabilityChanging(value);
					this.SendPropertyChanging();
					this._DedTaxability = value;
					this.SendPropertyChanged("DedTaxability");
					this.OnDedTaxabilityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EeDeduction_EeDedResult", Storage="_EeDeduction", ThisKey="EmployeeCode,DedCode", OtherKey="EmployeeCode,DedCode", IsForeignKey=true)]
		public EeDeduction EeDeduction
		{
			get
			{
				return this._EeDeduction.Entity;
			}
			set
			{
				EeDeduction previousValue = this._EeDeduction.Entity;
				if (((previousValue != value) 
							|| (this._EeDeduction.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EeDeduction.Entity = null;
						previousValue.EeDedResults.Remove(this);
					}
					this._EeDeduction.Entity = value;
					if ((value != null))
					{
						value.EeDedResults.Add(this);
						this._EmployeeCode = value.EmployeeCode;
						this._DedCode = value.DedCode;
					}
					else
					{
						this._EmployeeCode = default(string);
						this._DedCode = default(string);
					}
					this.SendPropertyChanged("EeDeduction");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PayCalendar_EeDedResult", Storage="_PayCalendar", ThisKey="PayFrequency,TaxYear,PayPeriodNo", OtherKey="PayFrequency,TaxYear,PayPeriodNo", IsForeignKey=true)]
		public PayCalendar PayCalendar
		{
			get
			{
				return this._PayCalendar.Entity;
			}
			set
			{
				PayCalendar previousValue = this._PayCalendar.Entity;
				if (((previousValue != value) 
							|| (this._PayCalendar.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PayCalendar.Entity = null;
						previousValue.EeDedResults.Remove(this);
					}
					this._PayCalendar.Entity = value;
					if ((value != null))
					{
						value.EeDedResults.Add(this);
						this._PayFrequency = value.PayFrequency;
						this._TaxYear = value.TaxYear;
						this._PayPeriodNo = value.PayPeriodNo;
					}
					else
					{
						this._PayFrequency = default(string);
						this._TaxYear = default(string);
						this._PayPeriodNo = default(int);
					}
					this.SendPropertyChanged("PayCalendar");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EeDeduction")]
	public partial class EeDeduction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _EmployeeCode;
		
		private string _DedCode;
		
		private System.DateTime _EeDedStartDate;
		
		private System.Nullable<System.DateTime> _EeDedEndDate;
		
		private string _EeDedStatusCode;
		
		private decimal _EeDedDfltAmt;
		
		private EntitySet<EeDedResult> _EeDedResults;
		
		private EntityRef<Deduction> _Deduction;
		
		private EntityRef<EmployeeInfo> _EmployeeInfo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmployeeCodeChanging(string value);
    partial void OnEmployeeCodeChanged();
    partial void OnDedCodeChanging(string value);
    partial void OnDedCodeChanged();
    partial void OnEeDedStartDateChanging(System.DateTime value);
    partial void OnEeDedStartDateChanged();
    partial void OnEeDedEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEeDedEndDateChanged();
    partial void OnEeDedStatusCodeChanging(string value);
    partial void OnEeDedStatusCodeChanged();
    partial void OnEeDedDfltAmtChanging(decimal value);
    partial void OnEeDedDfltAmtChanged();
    #endregion
		
		public EeDeduction()
		{
			this._EeDedResults = new EntitySet<EeDedResult>(new Action<EeDedResult>(this.attach_EeDedResults), new Action<EeDedResult>(this.detach_EeDedResults));
			this._Deduction = default(EntityRef<Deduction>);
			this._EmployeeInfo = default(EntityRef<EmployeeInfo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeCode", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string EmployeeCode
		{
			get
			{
				return this._EmployeeCode;
			}
			set
			{
				if ((this._EmployeeCode != value))
				{
					if (this._EmployeeInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._EmployeeCode = value;
					this.SendPropertyChanged("EmployeeCode");
					this.OnEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DedCode", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string DedCode
		{
			get
			{
				return this._DedCode;
			}
			set
			{
				if ((this._DedCode != value))
				{
					if (this._Deduction.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDedCodeChanging(value);
					this.SendPropertyChanging();
					this._DedCode = value;
					this.SendPropertyChanged("DedCode");
					this.OnDedCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EeDedStartDate", DbType="DateTime NOT NULL")]
		public System.DateTime EeDedStartDate
		{
			get
			{
				return this._EeDedStartDate;
			}
			set
			{
				if ((this._EeDedStartDate != value))
				{
					this.OnEeDedStartDateChanging(value);
					this.SendPropertyChanging();
					this._EeDedStartDate = value;
					this.SendPropertyChanged("EeDedStartDate");
					this.OnEeDedStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EeDedEndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EeDedEndDate
		{
			get
			{
				return this._EeDedEndDate;
			}
			set
			{
				if ((this._EeDedEndDate != value))
				{
					this.OnEeDedEndDateChanging(value);
					this.SendPropertyChanging();
					this._EeDedEndDate = value;
					this.SendPropertyChanged("EeDedEndDate");
					this.OnEeDedEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EeDedStatusCode", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string EeDedStatusCode
		{
			get
			{
				return this._EeDedStatusCode;
			}
			set
			{
				if ((this._EeDedStatusCode != value))
				{
					this.OnEeDedStatusCodeChanging(value);
					this.SendPropertyChanging();
					this._EeDedStatusCode = value;
					this.SendPropertyChanged("EeDedStatusCode");
					this.OnEeDedStatusCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EeDedDfltAmt", DbType="Decimal(8,3) NOT NULL")]
		public decimal EeDedDfltAmt
		{
			get
			{
				return this._EeDedDfltAmt;
			}
			set
			{
				if ((this._EeDedDfltAmt != value))
				{
					this.OnEeDedDfltAmtChanging(value);
					this.SendPropertyChanging();
					this._EeDedDfltAmt = value;
					this.SendPropertyChanged("EeDedDfltAmt");
					this.OnEeDedDfltAmtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EeDeduction_EeDedResult", Storage="_EeDedResults", ThisKey="EmployeeCode,DedCode", OtherKey="EmployeeCode,DedCode")]
		public EntitySet<EeDedResult> EeDedResults
		{
			get
			{
				return this._EeDedResults;
			}
			set
			{
				this._EeDedResults.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Deduction_EeDeduction", Storage="_Deduction", ThisKey="DedCode", OtherKey="DedCode", IsForeignKey=true)]
		public Deduction Deduction
		{
			get
			{
				return this._Deduction.Entity;
			}
			set
			{
				Deduction previousValue = this._Deduction.Entity;
				if (((previousValue != value) 
							|| (this._Deduction.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Deduction.Entity = null;
						previousValue.EeDeductions.Remove(this);
					}
					this._Deduction.Entity = value;
					if ((value != null))
					{
						value.EeDeductions.Add(this);
						this._DedCode = value.DedCode;
					}
					else
					{
						this._DedCode = default(string);
					}
					this.SendPropertyChanged("Deduction");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EmployeeInfo_EeDeduction", Storage="_EmployeeInfo", ThisKey="EmployeeCode", OtherKey="EmployeeCode", IsForeignKey=true)]
		public EmployeeInfo EmployeeInfo
		{
			get
			{
				return this._EmployeeInfo.Entity;
			}
			set
			{
				EmployeeInfo previousValue = this._EmployeeInfo.Entity;
				if (((previousValue != value) 
							|| (this._EmployeeInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EmployeeInfo.Entity = null;
						previousValue.EeDeductions.Remove(this);
					}
					this._EmployeeInfo.Entity = value;
					if ((value != null))
					{
						value.EeDeductions.Add(this);
						this._EmployeeCode = value.EmployeeCode;
					}
					else
					{
						this._EmployeeCode = default(string);
					}
					this.SendPropertyChanged("EmployeeInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EeDedResults(EeDedResult entity)
		{
			this.SendPropertyChanging();
			entity.EeDeduction = this;
		}
		
		private void detach_EeDedResults(EeDedResult entity)
		{
			this.SendPropertyChanging();
			entity.EeDeduction = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EeEarning")]
	public partial class EeEarning : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _EmployeeCode;
		
		private string _EarnCode;
		
		private System.DateTime _EeEarnStartDate;
		
		private System.Nullable<System.DateTime> _EeEarnEndDate;
		
		private string _EeEarnStatusCode;
		
		private decimal _EeEarnDfltAmt;
		
		private EntitySet<EeEarnResult> _EeEarnResults;
		
		private EntityRef<Earning> _Earning;
		
		private EntityRef<EmployeeInfo> _EmployeeInfo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmployeeCodeChanging(string value);
    partial void OnEmployeeCodeChanged();
    partial void OnEarnCodeChanging(string value);
    partial void OnEarnCodeChanged();
    partial void OnEeEarnStartDateChanging(System.DateTime value);
    partial void OnEeEarnStartDateChanged();
    partial void OnEeEarnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEeEarnEndDateChanged();
    partial void OnEeEarnStatusCodeChanging(string value);
    partial void OnEeEarnStatusCodeChanged();
    partial void OnEeEarnDfltAmtChanging(decimal value);
    partial void OnEeEarnDfltAmtChanged();
    #endregion
		
		public EeEarning()
		{
			this._EeEarnResults = new EntitySet<EeEarnResult>(new Action<EeEarnResult>(this.attach_EeEarnResults), new Action<EeEarnResult>(this.detach_EeEarnResults));
			this._Earning = default(EntityRef<Earning>);
			this._EmployeeInfo = default(EntityRef<EmployeeInfo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeCode", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string EmployeeCode
		{
			get
			{
				return this._EmployeeCode;
			}
			set
			{
				if ((this._EmployeeCode != value))
				{
					if (this._EmployeeInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._EmployeeCode = value;
					this.SendPropertyChanged("EmployeeCode");
					this.OnEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EarnCode", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string EarnCode
		{
			get
			{
				return this._EarnCode;
			}
			set
			{
				if ((this._EarnCode != value))
				{
					if (this._Earning.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEarnCodeChanging(value);
					this.SendPropertyChanging();
					this._EarnCode = value;
					this.SendPropertyChanged("EarnCode");
					this.OnEarnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EeEarnStartDate", DbType="DateTime NOT NULL")]
		public System.DateTime EeEarnStartDate
		{
			get
			{
				return this._EeEarnStartDate;
			}
			set
			{
				if ((this._EeEarnStartDate != value))
				{
					this.OnEeEarnStartDateChanging(value);
					this.SendPropertyChanging();
					this._EeEarnStartDate = value;
					this.SendPropertyChanged("EeEarnStartDate");
					this.OnEeEarnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EeEarnEndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EeEarnEndDate
		{
			get
			{
				return this._EeEarnEndDate;
			}
			set
			{
				if ((this._EeEarnEndDate != value))
				{
					this.OnEeEarnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EeEarnEndDate = value;
					this.SendPropertyChanged("EeEarnEndDate");
					this.OnEeEarnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EeEarnStatusCode", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string EeEarnStatusCode
		{
			get
			{
				return this._EeEarnStatusCode;
			}
			set
			{
				if ((this._EeEarnStatusCode != value))
				{
					this.OnEeEarnStatusCodeChanging(value);
					this.SendPropertyChanging();
					this._EeEarnStatusCode = value;
					this.SendPropertyChanged("EeEarnStatusCode");
					this.OnEeEarnStatusCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EeEarnDfltAmt", DbType="Decimal(8,3) NOT NULL")]
		public decimal EeEarnDfltAmt
		{
			get
			{
				return this._EeEarnDfltAmt;
			}
			set
			{
				if ((this._EeEarnDfltAmt != value))
				{
					this.OnEeEarnDfltAmtChanging(value);
					this.SendPropertyChanging();
					this._EeEarnDfltAmt = value;
					this.SendPropertyChanged("EeEarnDfltAmt");
					this.OnEeEarnDfltAmtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EeEarning_EeEarnResult", Storage="_EeEarnResults", ThisKey="EmployeeCode,EarnCode", OtherKey="EmployeeCode,EarnCode")]
		public EntitySet<EeEarnResult> EeEarnResults
		{
			get
			{
				return this._EeEarnResults;
			}
			set
			{
				this._EeEarnResults.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Earning_EeEarning", Storage="_Earning", ThisKey="EarnCode", OtherKey="EarnCode", IsForeignKey=true)]
		public Earning Earning
		{
			get
			{
				return this._Earning.Entity;
			}
			set
			{
				Earning previousValue = this._Earning.Entity;
				if (((previousValue != value) 
							|| (this._Earning.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Earning.Entity = null;
						previousValue.EeEarnings.Remove(this);
					}
					this._Earning.Entity = value;
					if ((value != null))
					{
						value.EeEarnings.Add(this);
						this._EarnCode = value.EarnCode;
					}
					else
					{
						this._EarnCode = default(string);
					}
					this.SendPropertyChanged("Earning");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EmployeeInfo_EeEarning", Storage="_EmployeeInfo", ThisKey="EmployeeCode", OtherKey="EmployeeCode", IsForeignKey=true)]
		public EmployeeInfo EmployeeInfo
		{
			get
			{
				return this._EmployeeInfo.Entity;
			}
			set
			{
				EmployeeInfo previousValue = this._EmployeeInfo.Entity;
				if (((previousValue != value) 
							|| (this._EmployeeInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EmployeeInfo.Entity = null;
						previousValue.EeEarnings.Remove(this);
					}
					this._EmployeeInfo.Entity = value;
					if ((value != null))
					{
						value.EeEarnings.Add(this);
						this._EmployeeCode = value.EmployeeCode;
					}
					else
					{
						this._EmployeeCode = default(string);
					}
					this.SendPropertyChanged("EmployeeInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EeEarnResults(EeEarnResult entity)
		{
			this.SendPropertyChanging();
			entity.EeEarning = this;
		}
		
		private void detach_EeEarnResults(EeEarnResult entity)
		{
			this.SendPropertyChanging();
			entity.EeEarning = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EeEarnResult")]
	public partial class EeEarnResult : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _EmployeeCode;
		
		private string _PayFrequency;
		
		private string _TaxYear;
		
		private int _PayPeriodNo;
		
		private string _EarnCode;
		
		private decimal _EeEarnAmt;
		
		private string _EarnTaxability;
		
		private EntityRef<EeEarning> _EeEarning;
		
		private EntityRef<PayCalendar> _PayCalendar;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmployeeCodeChanging(string value);
    partial void OnEmployeeCodeChanged();
    partial void OnPayFrequencyChanging(string value);
    partial void OnPayFrequencyChanged();
    partial void OnTaxYearChanging(string value);
    partial void OnTaxYearChanged();
    partial void OnPayPeriodNoChanging(int value);
    partial void OnPayPeriodNoChanged();
    partial void OnEarnCodeChanging(string value);
    partial void OnEarnCodeChanged();
    partial void OnEeEarnAmtChanging(decimal value);
    partial void OnEeEarnAmtChanged();
    partial void OnEarnTaxabilityChanging(string value);
    partial void OnEarnTaxabilityChanged();
    #endregion
		
		public EeEarnResult()
		{
			this._EeEarning = default(EntityRef<EeEarning>);
			this._PayCalendar = default(EntityRef<PayCalendar>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeCode", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string EmployeeCode
		{
			get
			{
				return this._EmployeeCode;
			}
			set
			{
				if ((this._EmployeeCode != value))
				{
					if (this._EeEarning.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._EmployeeCode = value;
					this.SendPropertyChanged("EmployeeCode");
					this.OnEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayFrequency", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PayFrequency
		{
			get
			{
				return this._PayFrequency;
			}
			set
			{
				if ((this._PayFrequency != value))
				{
					if (this._PayCalendar.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPayFrequencyChanging(value);
					this.SendPropertyChanging();
					this._PayFrequency = value;
					this.SendPropertyChanged("PayFrequency");
					this.OnPayFrequencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxYear", DbType="VarChar(4) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TaxYear
		{
			get
			{
				return this._TaxYear;
			}
			set
			{
				if ((this._TaxYear != value))
				{
					if (this._PayCalendar.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTaxYearChanging(value);
					this.SendPropertyChanging();
					this._TaxYear = value;
					this.SendPropertyChanged("TaxYear");
					this.OnTaxYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayPeriodNo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PayPeriodNo
		{
			get
			{
				return this._PayPeriodNo;
			}
			set
			{
				if ((this._PayPeriodNo != value))
				{
					if (this._PayCalendar.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPayPeriodNoChanging(value);
					this.SendPropertyChanging();
					this._PayPeriodNo = value;
					this.SendPropertyChanged("PayPeriodNo");
					this.OnPayPeriodNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EarnCode", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string EarnCode
		{
			get
			{
				return this._EarnCode;
			}
			set
			{
				if ((this._EarnCode != value))
				{
					if (this._EeEarning.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEarnCodeChanging(value);
					this.SendPropertyChanging();
					this._EarnCode = value;
					this.SendPropertyChanged("EarnCode");
					this.OnEarnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EeEarnAmt", DbType="Decimal(13,2) NOT NULL")]
		public decimal EeEarnAmt
		{
			get
			{
				return this._EeEarnAmt;
			}
			set
			{
				if ((this._EeEarnAmt != value))
				{
					this.OnEeEarnAmtChanging(value);
					this.SendPropertyChanging();
					this._EeEarnAmt = value;
					this.SendPropertyChanged("EeEarnAmt");
					this.OnEeEarnAmtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EarnTaxability", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string EarnTaxability
		{
			get
			{
				return this._EarnTaxability;
			}
			set
			{
				if ((this._EarnTaxability != value))
				{
					this.OnEarnTaxabilityChanging(value);
					this.SendPropertyChanging();
					this._EarnTaxability = value;
					this.SendPropertyChanged("EarnTaxability");
					this.OnEarnTaxabilityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EeEarning_EeEarnResult", Storage="_EeEarning", ThisKey="EmployeeCode,EarnCode", OtherKey="EmployeeCode,EarnCode", IsForeignKey=true)]
		public EeEarning EeEarning
		{
			get
			{
				return this._EeEarning.Entity;
			}
			set
			{
				EeEarning previousValue = this._EeEarning.Entity;
				if (((previousValue != value) 
							|| (this._EeEarning.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EeEarning.Entity = null;
						previousValue.EeEarnResults.Remove(this);
					}
					this._EeEarning.Entity = value;
					if ((value != null))
					{
						value.EeEarnResults.Add(this);
						this._EmployeeCode = value.EmployeeCode;
						this._EarnCode = value.EarnCode;
					}
					else
					{
						this._EmployeeCode = default(string);
						this._EarnCode = default(string);
					}
					this.SendPropertyChanged("EeEarning");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PayCalendar_EeEarnResult", Storage="_PayCalendar", ThisKey="PayFrequency,TaxYear,PayPeriodNo", OtherKey="PayFrequency,TaxYear,PayPeriodNo", IsForeignKey=true)]
		public PayCalendar PayCalendar
		{
			get
			{
				return this._PayCalendar.Entity;
			}
			set
			{
				PayCalendar previousValue = this._PayCalendar.Entity;
				if (((previousValue != value) 
							|| (this._PayCalendar.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PayCalendar.Entity = null;
						previousValue.EeEarnResults.Remove(this);
					}
					this._PayCalendar.Entity = value;
					if ((value != null))
					{
						value.EeEarnResults.Add(this);
						this._PayFrequency = value.PayFrequency;
						this._TaxYear = value.TaxYear;
						this._PayPeriodNo = value.PayPeriodNo;
					}
					else
					{
						this._PayFrequency = default(string);
						this._TaxYear = default(string);
						this._PayPeriodNo = default(int);
					}
					this.SendPropertyChanged("PayCalendar");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EeTaxResult")]
	public partial class EeTaxResult : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _EmployeeCode;
		
		private string _PayFrequency;
		
		private string _TaxYear;
		
		private int _PayPeriodNo;
		
		private decimal _TaxableWage_amt;
		
		private decimal _TaxAmt;
		
		private EntityRef<EmployeeInfo> _EmployeeInfo;
		
		private EntityRef<PayCalendar> _PayCalendar;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmployeeCodeChanging(string value);
    partial void OnEmployeeCodeChanged();
    partial void OnPayFrequencyChanging(string value);
    partial void OnPayFrequencyChanged();
    partial void OnTaxYearChanging(string value);
    partial void OnTaxYearChanged();
    partial void OnPayPeriodNoChanging(int value);
    partial void OnPayPeriodNoChanged();
    partial void OnTaxableWage_amtChanging(decimal value);
    partial void OnTaxableWage_amtChanged();
    partial void OnTaxAmtChanging(decimal value);
    partial void OnTaxAmtChanged();
    #endregion
		
		public EeTaxResult()
		{
			this._EmployeeInfo = default(EntityRef<EmployeeInfo>);
			this._PayCalendar = default(EntityRef<PayCalendar>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeCode", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string EmployeeCode
		{
			get
			{
				return this._EmployeeCode;
			}
			set
			{
				if ((this._EmployeeCode != value))
				{
					if (this._EmployeeInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._EmployeeCode = value;
					this.SendPropertyChanged("EmployeeCode");
					this.OnEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayFrequency", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PayFrequency
		{
			get
			{
				return this._PayFrequency;
			}
			set
			{
				if ((this._PayFrequency != value))
				{
					if (this._PayCalendar.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPayFrequencyChanging(value);
					this.SendPropertyChanging();
					this._PayFrequency = value;
					this.SendPropertyChanged("PayFrequency");
					this.OnPayFrequencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxYear", DbType="VarChar(4) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TaxYear
		{
			get
			{
				return this._TaxYear;
			}
			set
			{
				if ((this._TaxYear != value))
				{
					if (this._PayCalendar.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTaxYearChanging(value);
					this.SendPropertyChanging();
					this._TaxYear = value;
					this.SendPropertyChanged("TaxYear");
					this.OnTaxYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayPeriodNo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PayPeriodNo
		{
			get
			{
				return this._PayPeriodNo;
			}
			set
			{
				if ((this._PayPeriodNo != value))
				{
					if (this._PayCalendar.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPayPeriodNoChanging(value);
					this.SendPropertyChanging();
					this._PayPeriodNo = value;
					this.SendPropertyChanged("PayPeriodNo");
					this.OnPayPeriodNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxableWage_amt", DbType="Decimal(13,2) NOT NULL")]
		public decimal TaxableWage_amt
		{
			get
			{
				return this._TaxableWage_amt;
			}
			set
			{
				if ((this._TaxableWage_amt != value))
				{
					this.OnTaxableWage_amtChanging(value);
					this.SendPropertyChanging();
					this._TaxableWage_amt = value;
					this.SendPropertyChanged("TaxableWage_amt");
					this.OnTaxableWage_amtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxAmt", DbType="Decimal(13,2) NOT NULL")]
		public decimal TaxAmt
		{
			get
			{
				return this._TaxAmt;
			}
			set
			{
				if ((this._TaxAmt != value))
				{
					this.OnTaxAmtChanging(value);
					this.SendPropertyChanging();
					this._TaxAmt = value;
					this.SendPropertyChanged("TaxAmt");
					this.OnTaxAmtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EmployeeInfo_EeTaxResult", Storage="_EmployeeInfo", ThisKey="EmployeeCode", OtherKey="EmployeeCode", IsForeignKey=true)]
		public EmployeeInfo EmployeeInfo
		{
			get
			{
				return this._EmployeeInfo.Entity;
			}
			set
			{
				EmployeeInfo previousValue = this._EmployeeInfo.Entity;
				if (((previousValue != value) 
							|| (this._EmployeeInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EmployeeInfo.Entity = null;
						previousValue.EeTaxResults.Remove(this);
					}
					this._EmployeeInfo.Entity = value;
					if ((value != null))
					{
						value.EeTaxResults.Add(this);
						this._EmployeeCode = value.EmployeeCode;
					}
					else
					{
						this._EmployeeCode = default(string);
					}
					this.SendPropertyChanged("EmployeeInfo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PayCalendar_EeTaxResult", Storage="_PayCalendar", ThisKey="PayFrequency,TaxYear,PayPeriodNo", OtherKey="PayFrequency,TaxYear,PayPeriodNo", IsForeignKey=true)]
		public PayCalendar PayCalendar
		{
			get
			{
				return this._PayCalendar.Entity;
			}
			set
			{
				PayCalendar previousValue = this._PayCalendar.Entity;
				if (((previousValue != value) 
							|| (this._PayCalendar.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PayCalendar.Entity = null;
						previousValue.EeTaxResults.Remove(this);
					}
					this._PayCalendar.Entity = value;
					if ((value != null))
					{
						value.EeTaxResults.Add(this);
						this._PayFrequency = value.PayFrequency;
						this._TaxYear = value.TaxYear;
						this._PayPeriodNo = value.PayPeriodNo;
					}
					else
					{
						this._PayFrequency = default(string);
						this._TaxYear = default(string);
						this._PayPeriodNo = default(int);
					}
					this.SendPropertyChanged("PayCalendar");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EmployeeInfo")]
	public partial class EmployeeInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _EmployeeCode;
		
		private string _LastName;
		
		private string _MiddleName;
		
		private string _FirstName;
		
		private string _Title;
		
		private System.DateTime _BirthDate;
		
		private char _Gender;
		
		private string _MartialStatus;
		
		private string _Nationality;
		
		private string _AddLn1;
		
		private string _AddLn2;
		
		private string _Town;
		
		private string _State;
		
		private string _PostCode;
		
		private string _Phone;
		
		private EntitySet<Appointment> _Appointments;
		
		private EntitySet<EeDeduction> _EeDeductions;
		
		private EntitySet<EeEarning> _EeEarnings;
		
		private EntitySet<EeTaxResult> _EeTaxResults;
		
		private EntityRef<Employment> _Employment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmployeeCodeChanging(string value);
    partial void OnEmployeeCodeChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnMiddleNameChanging(string value);
    partial void OnMiddleNameChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnBirthDateChanging(System.DateTime value);
    partial void OnBirthDateChanged();
    partial void OnGenderChanging(char value);
    partial void OnGenderChanged();
    partial void OnMartialStatusChanging(string value);
    partial void OnMartialStatusChanged();
    partial void OnNationalityChanging(string value);
    partial void OnNationalityChanged();
    partial void OnAddLn1Changing(string value);
    partial void OnAddLn1Changed();
    partial void OnAddLn2Changing(string value);
    partial void OnAddLn2Changed();
    partial void OnTownChanging(string value);
    partial void OnTownChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnPostCodeChanging(string value);
    partial void OnPostCodeChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    #endregion
		
		public EmployeeInfo()
		{
			this._Appointments = new EntitySet<Appointment>(new Action<Appointment>(this.attach_Appointments), new Action<Appointment>(this.detach_Appointments));
			this._EeDeductions = new EntitySet<EeDeduction>(new Action<EeDeduction>(this.attach_EeDeductions), new Action<EeDeduction>(this.detach_EeDeductions));
			this._EeEarnings = new EntitySet<EeEarning>(new Action<EeEarning>(this.attach_EeEarnings), new Action<EeEarning>(this.detach_EeEarnings));
			this._EeTaxResults = new EntitySet<EeTaxResult>(new Action<EeTaxResult>(this.attach_EeTaxResults), new Action<EeTaxResult>(this.detach_EeTaxResults));
			this._Employment = default(EntityRef<Employment>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeCode", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string EmployeeCode
		{
			get
			{
				return this._EmployeeCode;
			}
			set
			{
				if ((this._EmployeeCode != value))
				{
					if (this._Employment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._EmployeeCode = value;
					this.SendPropertyChanged("EmployeeCode");
					this.OnEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiddleName", DbType="VarChar(30)")]
		public string MiddleName
		{
			get
			{
				return this._MiddleName;
			}
			set
			{
				if ((this._MiddleName != value))
				{
					this.OnMiddleNameChanging(value);
					this.SendPropertyChanging();
					this._MiddleName = value;
					this.SendPropertyChanged("MiddleName");
					this.OnMiddleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDate", DbType="DateTime NOT NULL")]
		public System.DateTime BirthDate
		{
			get
			{
				return this._BirthDate;
			}
			set
			{
				if ((this._BirthDate != value))
				{
					this.OnBirthDateChanging(value);
					this.SendPropertyChanging();
					this._BirthDate = value;
					this.SendPropertyChanged("BirthDate");
					this.OnBirthDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="Char(1) NOT NULL")]
		public char Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MartialStatus", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string MartialStatus
		{
			get
			{
				return this._MartialStatus;
			}
			set
			{
				if ((this._MartialStatus != value))
				{
					this.OnMartialStatusChanging(value);
					this.SendPropertyChanging();
					this._MartialStatus = value;
					this.SendPropertyChanged("MartialStatus");
					this.OnMartialStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nationality", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Nationality
		{
			get
			{
				return this._Nationality;
			}
			set
			{
				if ((this._Nationality != value))
				{
					this.OnNationalityChanging(value);
					this.SendPropertyChanging();
					this._Nationality = value;
					this.SendPropertyChanged("Nationality");
					this.OnNationalityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddLn1", DbType="VarChar(44) NOT NULL", CanBeNull=false)]
		public string AddLn1
		{
			get
			{
				return this._AddLn1;
			}
			set
			{
				if ((this._AddLn1 != value))
				{
					this.OnAddLn1Changing(value);
					this.SendPropertyChanging();
					this._AddLn1 = value;
					this.SendPropertyChanged("AddLn1");
					this.OnAddLn1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddLn2", DbType="VarChar(44)")]
		public string AddLn2
		{
			get
			{
				return this._AddLn2;
			}
			set
			{
				if ((this._AddLn2 != value))
				{
					this.OnAddLn2Changing(value);
					this.SendPropertyChanging();
					this._AddLn2 = value;
					this.SendPropertyChanged("AddLn2");
					this.OnAddLn2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Town", DbType="VarChar(20)")]
		public string Town
		{
			get
			{
				return this._Town;
			}
			set
			{
				if ((this._Town != value))
				{
					this.OnTownChanging(value);
					this.SendPropertyChanging();
					this._Town = value;
					this.SendPropertyChanged("Town");
					this.OnTownChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostCode", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string PostCode
		{
			get
			{
				return this._PostCode;
			}
			set
			{
				if ((this._PostCode != value))
				{
					this.OnPostCodeChanging(value);
					this.SendPropertyChanging();
					this._PostCode = value;
					this.SendPropertyChanged("PostCode");
					this.OnPostCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EmployeeInfo_Appointment", Storage="_Appointments", ThisKey="EmployeeCode", OtherKey="EmployeeCode")]
		public EntitySet<Appointment> Appointments
		{
			get
			{
				return this._Appointments;
			}
			set
			{
				this._Appointments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EmployeeInfo_EeDeduction", Storage="_EeDeductions", ThisKey="EmployeeCode", OtherKey="EmployeeCode")]
		public EntitySet<EeDeduction> EeDeductions
		{
			get
			{
				return this._EeDeductions;
			}
			set
			{
				this._EeDeductions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EmployeeInfo_EeEarning", Storage="_EeEarnings", ThisKey="EmployeeCode", OtherKey="EmployeeCode")]
		public EntitySet<EeEarning> EeEarnings
		{
			get
			{
				return this._EeEarnings;
			}
			set
			{
				this._EeEarnings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EmployeeInfo_EeTaxResult", Storage="_EeTaxResults", ThisKey="EmployeeCode", OtherKey="EmployeeCode")]
		public EntitySet<EeTaxResult> EeTaxResults
		{
			get
			{
				return this._EeTaxResults;
			}
			set
			{
				this._EeTaxResults.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employment_EmployeeInfo", Storage="_Employment", ThisKey="EmployeeCode", OtherKey="EmployeeCode", IsForeignKey=true)]
		public Employment Employment
		{
			get
			{
				return this._Employment.Entity;
			}
			set
			{
				Employment previousValue = this._Employment.Entity;
				if (((previousValue != value) 
							|| (this._Employment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employment.Entity = null;
						previousValue.EmployeeInfo = null;
					}
					this._Employment.Entity = value;
					if ((value != null))
					{
						value.EmployeeInfo = this;
						this._EmployeeCode = value.EmployeeCode;
					}
					else
					{
						this._EmployeeCode = default(string);
					}
					this.SendPropertyChanged("Employment");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Appointments(Appointment entity)
		{
			this.SendPropertyChanging();
			entity.EmployeeInfo = this;
		}
		
		private void detach_Appointments(Appointment entity)
		{
			this.SendPropertyChanging();
			entity.EmployeeInfo = null;
		}
		
		private void attach_EeDeductions(EeDeduction entity)
		{
			this.SendPropertyChanging();
			entity.EmployeeInfo = this;
		}
		
		private void detach_EeDeductions(EeDeduction entity)
		{
			this.SendPropertyChanging();
			entity.EmployeeInfo = null;
		}
		
		private void attach_EeEarnings(EeEarning entity)
		{
			this.SendPropertyChanging();
			entity.EmployeeInfo = this;
		}
		
		private void detach_EeEarnings(EeEarning entity)
		{
			this.SendPropertyChanging();
			entity.EmployeeInfo = null;
		}
		
		private void attach_EeTaxResults(EeTaxResult entity)
		{
			this.SendPropertyChanging();
			entity.EmployeeInfo = this;
		}
		
		private void detach_EeTaxResults(EeTaxResult entity)
		{
			this.SendPropertyChanging();
			entity.EmployeeInfo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Employer")]
	public partial class Employer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _EmployerCode;
		
		private string _EmployerName;
		
		private System.DateTime _ErStartDate;
		
		private System.Nullable<System.DateTime> _ErEndDate;
		
		private string _ErAddLn1;
		
		private string _ErAddLn2;
		
		private string _ErAddLn3;
		
		private string _ErTown;
		
		private string _ErState;
		
		private string _ErCountry;
		
		private string _ErPostCode;
		
		private string _ErPhone;
		
		private EntitySet<Employment> _Employments;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmployerCodeChanging(string value);
    partial void OnEmployerCodeChanged();
    partial void OnEmployerNameChanging(string value);
    partial void OnEmployerNameChanged();
    partial void OnErStartDateChanging(System.DateTime value);
    partial void OnErStartDateChanged();
    partial void OnErEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnErEndDateChanged();
    partial void OnErAddLn1Changing(string value);
    partial void OnErAddLn1Changed();
    partial void OnErAddLn2Changing(string value);
    partial void OnErAddLn2Changed();
    partial void OnErAddLn3Changing(string value);
    partial void OnErAddLn3Changed();
    partial void OnErTownChanging(string value);
    partial void OnErTownChanged();
    partial void OnErStateChanging(string value);
    partial void OnErStateChanged();
    partial void OnErCountryChanging(string value);
    partial void OnErCountryChanged();
    partial void OnErPostCodeChanging(string value);
    partial void OnErPostCodeChanged();
    partial void OnErPhoneChanging(string value);
    partial void OnErPhoneChanged();
    #endregion
		
		public Employer()
		{
			this._Employments = new EntitySet<Employment>(new Action<Employment>(this.attach_Employments), new Action<Employment>(this.detach_Employments));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployerCode", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string EmployerCode
		{
			get
			{
				return this._EmployerCode;
			}
			set
			{
				if ((this._EmployerCode != value))
				{
					this.OnEmployerCodeChanging(value);
					this.SendPropertyChanging();
					this._EmployerCode = value;
					this.SendPropertyChanged("EmployerCode");
					this.OnEmployerCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployerName", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string EmployerName
		{
			get
			{
				return this._EmployerName;
			}
			set
			{
				if ((this._EmployerName != value))
				{
					this.OnEmployerNameChanging(value);
					this.SendPropertyChanging();
					this._EmployerName = value;
					this.SendPropertyChanged("EmployerName");
					this.OnEmployerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErStartDate", DbType="DateTime NOT NULL")]
		public System.DateTime ErStartDate
		{
			get
			{
				return this._ErStartDate;
			}
			set
			{
				if ((this._ErStartDate != value))
				{
					this.OnErStartDateChanging(value);
					this.SendPropertyChanging();
					this._ErStartDate = value;
					this.SendPropertyChanged("ErStartDate");
					this.OnErStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErEndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ErEndDate
		{
			get
			{
				return this._ErEndDate;
			}
			set
			{
				if ((this._ErEndDate != value))
				{
					this.OnErEndDateChanging(value);
					this.SendPropertyChanging();
					this._ErEndDate = value;
					this.SendPropertyChanged("ErEndDate");
					this.OnErEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErAddLn1", DbType="VarChar(44) NOT NULL", CanBeNull=false)]
		public string ErAddLn1
		{
			get
			{
				return this._ErAddLn1;
			}
			set
			{
				if ((this._ErAddLn1 != value))
				{
					this.OnErAddLn1Changing(value);
					this.SendPropertyChanging();
					this._ErAddLn1 = value;
					this.SendPropertyChanged("ErAddLn1");
					this.OnErAddLn1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErAddLn2", DbType="VarChar(44)")]
		public string ErAddLn2
		{
			get
			{
				return this._ErAddLn2;
			}
			set
			{
				if ((this._ErAddLn2 != value))
				{
					this.OnErAddLn2Changing(value);
					this.SendPropertyChanging();
					this._ErAddLn2 = value;
					this.SendPropertyChanged("ErAddLn2");
					this.OnErAddLn2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErAddLn3", DbType="VarChar(44)")]
		public string ErAddLn3
		{
			get
			{
				return this._ErAddLn3;
			}
			set
			{
				if ((this._ErAddLn3 != value))
				{
					this.OnErAddLn3Changing(value);
					this.SendPropertyChanging();
					this._ErAddLn3 = value;
					this.SendPropertyChanged("ErAddLn3");
					this.OnErAddLn3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErTown", DbType="VarChar(20)")]
		public string ErTown
		{
			get
			{
				return this._ErTown;
			}
			set
			{
				if ((this._ErTown != value))
				{
					this.OnErTownChanging(value);
					this.SendPropertyChanging();
					this._ErTown = value;
					this.SendPropertyChanged("ErTown");
					this.OnErTownChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErState", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string ErState
		{
			get
			{
				return this._ErState;
			}
			set
			{
				if ((this._ErState != value))
				{
					this.OnErStateChanging(value);
					this.SendPropertyChanging();
					this._ErState = value;
					this.SendPropertyChanged("ErState");
					this.OnErStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErCountry", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string ErCountry
		{
			get
			{
				return this._ErCountry;
			}
			set
			{
				if ((this._ErCountry != value))
				{
					this.OnErCountryChanging(value);
					this.SendPropertyChanging();
					this._ErCountry = value;
					this.SendPropertyChanged("ErCountry");
					this.OnErCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErPostCode", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string ErPostCode
		{
			get
			{
				return this._ErPostCode;
			}
			set
			{
				if ((this._ErPostCode != value))
				{
					this.OnErPostCodeChanging(value);
					this.SendPropertyChanging();
					this._ErPostCode = value;
					this.SendPropertyChanged("ErPostCode");
					this.OnErPostCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErPhone", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string ErPhone
		{
			get
			{
				return this._ErPhone;
			}
			set
			{
				if ((this._ErPhone != value))
				{
					this.OnErPhoneChanging(value);
					this.SendPropertyChanging();
					this._ErPhone = value;
					this.SendPropertyChanged("ErPhone");
					this.OnErPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employer_Employment", Storage="_Employments", ThisKey="EmployerCode", OtherKey="EmployerCode")]
		public EntitySet<Employment> Employments
		{
			get
			{
				return this._Employments;
			}
			set
			{
				this._Employments.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Employments(Employment entity)
		{
			this.SendPropertyChanging();
			entity.Employer = this;
		}
		
		private void detach_Employments(Employment entity)
		{
			this.SendPropertyChanging();
			entity.Employer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Employment")]
	public partial class Employment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _EmployeeCode;
		
		private string _EmployerCode;
		
		private System.DateTime _EmplHireDate;
		
		private System.Nullable<System.DateTime> _EmplTermDate;
		
		private string _EeStatus;
		
		private char _FullPartTime;
		
		private char _PermanentTemp;
		
		private string _LeavingReason;
		
		private System.Nullable<int> _NoticePeriod;
		
		private string _NoticePeriodUnit;
		
		private System.Nullable<int> _ProbPeriod;
		
		private string _ProbPeriodUnit;
		
		private string _PayFrequency;
		
		private EntityRef<EmployeeInfo> _EmployeeInfo;
		
		private EntityRef<Employer> _Employer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmployeeCodeChanging(string value);
    partial void OnEmployeeCodeChanged();
    partial void OnEmployerCodeChanging(string value);
    partial void OnEmployerCodeChanged();
    partial void OnEmplHireDateChanging(System.DateTime value);
    partial void OnEmplHireDateChanged();
    partial void OnEmplTermDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEmplTermDateChanged();
    partial void OnEeStatusChanging(string value);
    partial void OnEeStatusChanged();
    partial void OnFullPartTimeChanging(char value);
    partial void OnFullPartTimeChanged();
    partial void OnPermanentTempChanging(char value);
    partial void OnPermanentTempChanged();
    partial void OnLeavingReasonChanging(string value);
    partial void OnLeavingReasonChanged();
    partial void OnNoticePeriodChanging(System.Nullable<int> value);
    partial void OnNoticePeriodChanged();
    partial void OnNoticePeriodUnitChanging(string value);
    partial void OnNoticePeriodUnitChanged();
    partial void OnProbPeriodChanging(System.Nullable<int> value);
    partial void OnProbPeriodChanged();
    partial void OnProbPeriodUnitChanging(string value);
    partial void OnProbPeriodUnitChanged();
    partial void OnPayFrequencyChanging(string value);
    partial void OnPayFrequencyChanged();
    #endregion
		
		public Employment()
		{
			this._EmployeeInfo = default(EntityRef<EmployeeInfo>);
			this._Employer = default(EntityRef<Employer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeCode", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string EmployeeCode
		{
			get
			{
				return this._EmployeeCode;
			}
			set
			{
				if ((this._EmployeeCode != value))
				{
					this.OnEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._EmployeeCode = value;
					this.SendPropertyChanged("EmployeeCode");
					this.OnEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployerCode", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string EmployerCode
		{
			get
			{
				return this._EmployerCode;
			}
			set
			{
				if ((this._EmployerCode != value))
				{
					if (this._Employer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployerCodeChanging(value);
					this.SendPropertyChanging();
					this._EmployerCode = value;
					this.SendPropertyChanged("EmployerCode");
					this.OnEmployerCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmplHireDate", DbType="DateTime NOT NULL")]
		public System.DateTime EmplHireDate
		{
			get
			{
				return this._EmplHireDate;
			}
			set
			{
				if ((this._EmplHireDate != value))
				{
					this.OnEmplHireDateChanging(value);
					this.SendPropertyChanging();
					this._EmplHireDate = value;
					this.SendPropertyChanged("EmplHireDate");
					this.OnEmplHireDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmplTermDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EmplTermDate
		{
			get
			{
				return this._EmplTermDate;
			}
			set
			{
				if ((this._EmplTermDate != value))
				{
					this.OnEmplTermDateChanging(value);
					this.SendPropertyChanging();
					this._EmplTermDate = value;
					this.SendPropertyChanged("EmplTermDate");
					this.OnEmplTermDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EeStatus", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string EeStatus
		{
			get
			{
				return this._EeStatus;
			}
			set
			{
				if ((this._EeStatus != value))
				{
					this.OnEeStatusChanging(value);
					this.SendPropertyChanging();
					this._EeStatus = value;
					this.SendPropertyChanged("EeStatus");
					this.OnEeStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullPartTime", DbType="Char(1) NOT NULL")]
		public char FullPartTime
		{
			get
			{
				return this._FullPartTime;
			}
			set
			{
				if ((this._FullPartTime != value))
				{
					this.OnFullPartTimeChanging(value);
					this.SendPropertyChanging();
					this._FullPartTime = value;
					this.SendPropertyChanged("FullPartTime");
					this.OnFullPartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermanentTemp", DbType="Char(1) NOT NULL")]
		public char PermanentTemp
		{
			get
			{
				return this._PermanentTemp;
			}
			set
			{
				if ((this._PermanentTemp != value))
				{
					this.OnPermanentTempChanging(value);
					this.SendPropertyChanging();
					this._PermanentTemp = value;
					this.SendPropertyChanged("PermanentTemp");
					this.OnPermanentTempChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeavingReason", DbType="VarChar(40)")]
		public string LeavingReason
		{
			get
			{
				return this._LeavingReason;
			}
			set
			{
				if ((this._LeavingReason != value))
				{
					this.OnLeavingReasonChanging(value);
					this.SendPropertyChanging();
					this._LeavingReason = value;
					this.SendPropertyChanged("LeavingReason");
					this.OnLeavingReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoticePeriod", DbType="Int")]
		public System.Nullable<int> NoticePeriod
		{
			get
			{
				return this._NoticePeriod;
			}
			set
			{
				if ((this._NoticePeriod != value))
				{
					this.OnNoticePeriodChanging(value);
					this.SendPropertyChanging();
					this._NoticePeriod = value;
					this.SendPropertyChanged("NoticePeriod");
					this.OnNoticePeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoticePeriodUnit", DbType="VarChar(20)")]
		public string NoticePeriodUnit
		{
			get
			{
				return this._NoticePeriodUnit;
			}
			set
			{
				if ((this._NoticePeriodUnit != value))
				{
					this.OnNoticePeriodUnitChanging(value);
					this.SendPropertyChanging();
					this._NoticePeriodUnit = value;
					this.SendPropertyChanged("NoticePeriodUnit");
					this.OnNoticePeriodUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProbPeriod", DbType="Int")]
		public System.Nullable<int> ProbPeriod
		{
			get
			{
				return this._ProbPeriod;
			}
			set
			{
				if ((this._ProbPeriod != value))
				{
					this.OnProbPeriodChanging(value);
					this.SendPropertyChanging();
					this._ProbPeriod = value;
					this.SendPropertyChanged("ProbPeriod");
					this.OnProbPeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProbPeriodUnit", DbType="VarChar(20)")]
		public string ProbPeriodUnit
		{
			get
			{
				return this._ProbPeriodUnit;
			}
			set
			{
				if ((this._ProbPeriodUnit != value))
				{
					this.OnProbPeriodUnitChanging(value);
					this.SendPropertyChanging();
					this._ProbPeriodUnit = value;
					this.SendPropertyChanged("ProbPeriodUnit");
					this.OnProbPeriodUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayFrequency", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string PayFrequency
		{
			get
			{
				return this._PayFrequency;
			}
			set
			{
				if ((this._PayFrequency != value))
				{
					this.OnPayFrequencyChanging(value);
					this.SendPropertyChanging();
					this._PayFrequency = value;
					this.SendPropertyChanged("PayFrequency");
					this.OnPayFrequencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employment_EmployeeInfo", Storage="_EmployeeInfo", ThisKey="EmployeeCode", OtherKey="EmployeeCode", IsUnique=true, IsForeignKey=false)]
		public EmployeeInfo EmployeeInfo
		{
			get
			{
				return this._EmployeeInfo.Entity;
			}
			set
			{
				EmployeeInfo previousValue = this._EmployeeInfo.Entity;
				if (((previousValue != value) 
							|| (this._EmployeeInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EmployeeInfo.Entity = null;
						previousValue.Employment = null;
					}
					this._EmployeeInfo.Entity = value;
					if ((value != null))
					{
						value.Employment = this;
					}
					this.SendPropertyChanged("EmployeeInfo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employer_Employment", Storage="_Employer", ThisKey="EmployerCode", OtherKey="EmployerCode", IsForeignKey=true)]
		public Employer Employer
		{
			get
			{
				return this._Employer.Entity;
			}
			set
			{
				Employer previousValue = this._Employer.Entity;
				if (((previousValue != value) 
							|| (this._Employer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employer.Entity = null;
						previousValue.Employments.Remove(this);
					}
					this._Employer.Entity = value;
					if ((value != null))
					{
						value.Employments.Add(this);
						this._EmployerCode = value.EmployerCode;
					}
					else
					{
						this._EmployerCode = default(string);
					}
					this.SendPropertyChanged("Employer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Job")]
	public partial class Job : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _JobCode;
		
		private string _JobTitle;
		
		private string _JobDescription;
		
		private EntitySet<Position> _Positions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnJobCodeChanging(string value);
    partial void OnJobCodeChanged();
    partial void OnJobTitleChanging(string value);
    partial void OnJobTitleChanged();
    partial void OnJobDescriptionChanging(string value);
    partial void OnJobDescriptionChanged();
    #endregion
		
		public Job()
		{
			this._Positions = new EntitySet<Position>(new Action<Position>(this.attach_Positions), new Action<Position>(this.detach_Positions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobCode", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string JobCode
		{
			get
			{
				return this._JobCode;
			}
			set
			{
				if ((this._JobCode != value))
				{
					this.OnJobCodeChanging(value);
					this.SendPropertyChanging();
					this._JobCode = value;
					this.SendPropertyChanged("JobCode");
					this.OnJobCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobTitle", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string JobTitle
		{
			get
			{
				return this._JobTitle;
			}
			set
			{
				if ((this._JobTitle != value))
				{
					this.OnJobTitleChanging(value);
					this.SendPropertyChanging();
					this._JobTitle = value;
					this.SendPropertyChanged("JobTitle");
					this.OnJobTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobDescription", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string JobDescription
		{
			get
			{
				return this._JobDescription;
			}
			set
			{
				if ((this._JobDescription != value))
				{
					this.OnJobDescriptionChanging(value);
					this.SendPropertyChanging();
					this._JobDescription = value;
					this.SendPropertyChanged("JobDescription");
					this.OnJobDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Job_Position", Storage="_Positions", ThisKey="JobCode", OtherKey="JobCode")]
		public EntitySet<Position> Positions
		{
			get
			{
				return this._Positions;
			}
			set
			{
				this._Positions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Positions(Position entity)
		{
			this.SendPropertyChanging();
			entity.Job = this;
		}
		
		private void detach_Positions(Position entity)
		{
			this.SendPropertyChanging();
			entity.Job = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PayCalendar")]
	public partial class PayCalendar : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PayFrequency;
		
		private string _TaxYear;
		
		private int _PayPeriodNo;
		
		private System.DateTime _TaxYearStart;
		
		private System.DateTime _TaxYearEnd;
		
		private System.DateTime _PayPeriodStart;
		
		private System.DateTime _PayPeriodEnd;
		
		private System.DateTime _PayDate;
		
		private System.DateTime _PayProcessDate;
		
		private EntitySet<EeDedResult> _EeDedResults;
		
		private EntitySet<EeEarnResult> _EeEarnResults;
		
		private EntitySet<EeTaxResult> _EeTaxResults;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPayFrequencyChanging(string value);
    partial void OnPayFrequencyChanged();
    partial void OnTaxYearChanging(string value);
    partial void OnTaxYearChanged();
    partial void OnPayPeriodNoChanging(int value);
    partial void OnPayPeriodNoChanged();
    partial void OnTaxYearStartChanging(System.DateTime value);
    partial void OnTaxYearStartChanged();
    partial void OnTaxYearEndChanging(System.DateTime value);
    partial void OnTaxYearEndChanged();
    partial void OnPayPeriodStartChanging(System.DateTime value);
    partial void OnPayPeriodStartChanged();
    partial void OnPayPeriodEndChanging(System.DateTime value);
    partial void OnPayPeriodEndChanged();
    partial void OnPayDateChanging(System.DateTime value);
    partial void OnPayDateChanged();
    partial void OnPayProcessDateChanging(System.DateTime value);
    partial void OnPayProcessDateChanged();
    #endregion
		
		public PayCalendar()
		{
			this._EeDedResults = new EntitySet<EeDedResult>(new Action<EeDedResult>(this.attach_EeDedResults), new Action<EeDedResult>(this.detach_EeDedResults));
			this._EeEarnResults = new EntitySet<EeEarnResult>(new Action<EeEarnResult>(this.attach_EeEarnResults), new Action<EeEarnResult>(this.detach_EeEarnResults));
			this._EeTaxResults = new EntitySet<EeTaxResult>(new Action<EeTaxResult>(this.attach_EeTaxResults), new Action<EeTaxResult>(this.detach_EeTaxResults));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayFrequency", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PayFrequency
		{
			get
			{
				return this._PayFrequency;
			}
			set
			{
				if ((this._PayFrequency != value))
				{
					this.OnPayFrequencyChanging(value);
					this.SendPropertyChanging();
					this._PayFrequency = value;
					this.SendPropertyChanged("PayFrequency");
					this.OnPayFrequencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxYear", DbType="VarChar(4) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TaxYear
		{
			get
			{
				return this._TaxYear;
			}
			set
			{
				if ((this._TaxYear != value))
				{
					this.OnTaxYearChanging(value);
					this.SendPropertyChanging();
					this._TaxYear = value;
					this.SendPropertyChanged("TaxYear");
					this.OnTaxYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayPeriodNo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PayPeriodNo
		{
			get
			{
				return this._PayPeriodNo;
			}
			set
			{
				if ((this._PayPeriodNo != value))
				{
					this.OnPayPeriodNoChanging(value);
					this.SendPropertyChanging();
					this._PayPeriodNo = value;
					this.SendPropertyChanged("PayPeriodNo");
					this.OnPayPeriodNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxYearStart", DbType="DateTime NOT NULL")]
		public System.DateTime TaxYearStart
		{
			get
			{
				return this._TaxYearStart;
			}
			set
			{
				if ((this._TaxYearStart != value))
				{
					this.OnTaxYearStartChanging(value);
					this.SendPropertyChanging();
					this._TaxYearStart = value;
					this.SendPropertyChanged("TaxYearStart");
					this.OnTaxYearStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxYearEnd", DbType="DateTime NOT NULL")]
		public System.DateTime TaxYearEnd
		{
			get
			{
				return this._TaxYearEnd;
			}
			set
			{
				if ((this._TaxYearEnd != value))
				{
					this.OnTaxYearEndChanging(value);
					this.SendPropertyChanging();
					this._TaxYearEnd = value;
					this.SendPropertyChanged("TaxYearEnd");
					this.OnTaxYearEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayPeriodStart", DbType="DateTime NOT NULL")]
		public System.DateTime PayPeriodStart
		{
			get
			{
				return this._PayPeriodStart;
			}
			set
			{
				if ((this._PayPeriodStart != value))
				{
					this.OnPayPeriodStartChanging(value);
					this.SendPropertyChanging();
					this._PayPeriodStart = value;
					this.SendPropertyChanged("PayPeriodStart");
					this.OnPayPeriodStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayPeriodEnd", DbType="DateTime NOT NULL")]
		public System.DateTime PayPeriodEnd
		{
			get
			{
				return this._PayPeriodEnd;
			}
			set
			{
				if ((this._PayPeriodEnd != value))
				{
					this.OnPayPeriodEndChanging(value);
					this.SendPropertyChanging();
					this._PayPeriodEnd = value;
					this.SendPropertyChanged("PayPeriodEnd");
					this.OnPayPeriodEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayDate", DbType="DateTime NOT NULL")]
		public System.DateTime PayDate
		{
			get
			{
				return this._PayDate;
			}
			set
			{
				if ((this._PayDate != value))
				{
					this.OnPayDateChanging(value);
					this.SendPropertyChanging();
					this._PayDate = value;
					this.SendPropertyChanged("PayDate");
					this.OnPayDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayProcessDate", DbType="DateTime NOT NULL")]
		public System.DateTime PayProcessDate
		{
			get
			{
				return this._PayProcessDate;
			}
			set
			{
				if ((this._PayProcessDate != value))
				{
					this.OnPayProcessDateChanging(value);
					this.SendPropertyChanging();
					this._PayProcessDate = value;
					this.SendPropertyChanged("PayProcessDate");
					this.OnPayProcessDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PayCalendar_EeDedResult", Storage="_EeDedResults", ThisKey="PayFrequency,TaxYear,PayPeriodNo", OtherKey="PayFrequency,TaxYear,PayPeriodNo")]
		public EntitySet<EeDedResult> EeDedResults
		{
			get
			{
				return this._EeDedResults;
			}
			set
			{
				this._EeDedResults.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PayCalendar_EeEarnResult", Storage="_EeEarnResults", ThisKey="PayFrequency,TaxYear,PayPeriodNo", OtherKey="PayFrequency,TaxYear,PayPeriodNo")]
		public EntitySet<EeEarnResult> EeEarnResults
		{
			get
			{
				return this._EeEarnResults;
			}
			set
			{
				this._EeEarnResults.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PayCalendar_EeTaxResult", Storage="_EeTaxResults", ThisKey="PayFrequency,TaxYear,PayPeriodNo", OtherKey="PayFrequency,TaxYear,PayPeriodNo")]
		public EntitySet<EeTaxResult> EeTaxResults
		{
			get
			{
				return this._EeTaxResults;
			}
			set
			{
				this._EeTaxResults.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EeDedResults(EeDedResult entity)
		{
			this.SendPropertyChanging();
			entity.PayCalendar = this;
		}
		
		private void detach_EeDedResults(EeDedResult entity)
		{
			this.SendPropertyChanging();
			entity.PayCalendar = null;
		}
		
		private void attach_EeEarnResults(EeEarnResult entity)
		{
			this.SendPropertyChanging();
			entity.PayCalendar = this;
		}
		
		private void detach_EeEarnResults(EeEarnResult entity)
		{
			this.SendPropertyChanging();
			entity.PayCalendar = null;
		}
		
		private void attach_EeTaxResults(EeTaxResult entity)
		{
			this.SendPropertyChanging();
			entity.PayCalendar = this;
		}
		
		private void detach_EeTaxResults(EeTaxResult entity)
		{
			this.SendPropertyChanging();
			entity.PayCalendar = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Position")]
	public partial class Position : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _BuCode;
		
		private string _JobCode;
		
		private string _PosnId;
		
		private string _PosnTitle;
		
		private System.DateTime _PosnStartDate;
		
		private System.Nullable<System.DateTime> _PosnEndDate;
		
		private char _PosnStatusCode;
		
		private EntitySet<Appointment> _Appointments;
		
		private EntityRef<BusinessUnit> _BusinessUnit;
		
		private EntityRef<Job> _Job;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBuCodeChanging(string value);
    partial void OnBuCodeChanged();
    partial void OnJobCodeChanging(string value);
    partial void OnJobCodeChanged();
    partial void OnPosnIdChanging(string value);
    partial void OnPosnIdChanged();
    partial void OnPosnTitleChanging(string value);
    partial void OnPosnTitleChanged();
    partial void OnPosnStartDateChanging(System.DateTime value);
    partial void OnPosnStartDateChanged();
    partial void OnPosnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPosnEndDateChanged();
    partial void OnPosnStatusCodeChanging(char value);
    partial void OnPosnStatusCodeChanged();
    #endregion
		
		public Position()
		{
			this._Appointments = new EntitySet<Appointment>(new Action<Appointment>(this.attach_Appointments), new Action<Appointment>(this.detach_Appointments));
			this._BusinessUnit = default(EntityRef<BusinessUnit>);
			this._Job = default(EntityRef<Job>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuCode", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string BuCode
		{
			get
			{
				return this._BuCode;
			}
			set
			{
				if ((this._BuCode != value))
				{
					if (this._BusinessUnit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBuCodeChanging(value);
					this.SendPropertyChanging();
					this._BuCode = value;
					this.SendPropertyChanged("BuCode");
					this.OnBuCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobCode", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string JobCode
		{
			get
			{
				return this._JobCode;
			}
			set
			{
				if ((this._JobCode != value))
				{
					if (this._Job.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJobCodeChanging(value);
					this.SendPropertyChanging();
					this._JobCode = value;
					this.SendPropertyChanged("JobCode");
					this.OnJobCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PosnId", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PosnId
		{
			get
			{
				return this._PosnId;
			}
			set
			{
				if ((this._PosnId != value))
				{
					this.OnPosnIdChanging(value);
					this.SendPropertyChanging();
					this._PosnId = value;
					this.SendPropertyChanged("PosnId");
					this.OnPosnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PosnTitle", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string PosnTitle
		{
			get
			{
				return this._PosnTitle;
			}
			set
			{
				if ((this._PosnTitle != value))
				{
					this.OnPosnTitleChanging(value);
					this.SendPropertyChanging();
					this._PosnTitle = value;
					this.SendPropertyChanged("PosnTitle");
					this.OnPosnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PosnStartDate", DbType="DateTime NOT NULL")]
		public System.DateTime PosnStartDate
		{
			get
			{
				return this._PosnStartDate;
			}
			set
			{
				if ((this._PosnStartDate != value))
				{
					this.OnPosnStartDateChanging(value);
					this.SendPropertyChanging();
					this._PosnStartDate = value;
					this.SendPropertyChanged("PosnStartDate");
					this.OnPosnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PosnEndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PosnEndDate
		{
			get
			{
				return this._PosnEndDate;
			}
			set
			{
				if ((this._PosnEndDate != value))
				{
					this.OnPosnEndDateChanging(value);
					this.SendPropertyChanging();
					this._PosnEndDate = value;
					this.SendPropertyChanged("PosnEndDate");
					this.OnPosnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PosnStatusCode", DbType="Char(1) NOT NULL")]
		public char PosnStatusCode
		{
			get
			{
				return this._PosnStatusCode;
			}
			set
			{
				if ((this._PosnStatusCode != value))
				{
					this.OnPosnStatusCodeChanging(value);
					this.SendPropertyChanging();
					this._PosnStatusCode = value;
					this.SendPropertyChanged("PosnStatusCode");
					this.OnPosnStatusCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Position_Appointment", Storage="_Appointments", ThisKey="BuCode,JobCode,PosnId", OtherKey="BuCode,JobCode,PosnId")]
		public EntitySet<Appointment> Appointments
		{
			get
			{
				return this._Appointments;
			}
			set
			{
				this._Appointments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BusinessUnit_Position", Storage="_BusinessUnit", ThisKey="BuCode", OtherKey="BuCode", IsForeignKey=true)]
		public BusinessUnit BusinessUnit
		{
			get
			{
				return this._BusinessUnit.Entity;
			}
			set
			{
				BusinessUnit previousValue = this._BusinessUnit.Entity;
				if (((previousValue != value) 
							|| (this._BusinessUnit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BusinessUnit.Entity = null;
						previousValue.Positions.Remove(this);
					}
					this._BusinessUnit.Entity = value;
					if ((value != null))
					{
						value.Positions.Add(this);
						this._BuCode = value.BuCode;
					}
					else
					{
						this._BuCode = default(string);
					}
					this.SendPropertyChanged("BusinessUnit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Job_Position", Storage="_Job", ThisKey="JobCode", OtherKey="JobCode", IsForeignKey=true)]
		public Job Job
		{
			get
			{
				return this._Job.Entity;
			}
			set
			{
				Job previousValue = this._Job.Entity;
				if (((previousValue != value) 
							|| (this._Job.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Job.Entity = null;
						previousValue.Positions.Remove(this);
					}
					this._Job.Entity = value;
					if ((value != null))
					{
						value.Positions.Add(this);
						this._JobCode = value.JobCode;
					}
					else
					{
						this._JobCode = default(string);
					}
					this.SendPropertyChanged("Job");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Appointments(Appointment entity)
		{
			this.SendPropertyChanging();
			entity.Position = this;
		}
		
		private void detach_Appointments(Appointment entity)
		{
			this.SendPropertyChanging();
			entity.Position = null;
		}
	}
}
#pragma warning restore 1591
